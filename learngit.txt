#版本回退： git reset --hard HEAD^
# HEAD当前版本  HEAD^上一个版本 HEAD^^上两个版本 HEAD~100


#撤销修改：
1）未添加到暂存区：git checkout --<filename>
2) 添加到暂存区： git reset HEAD <filename>

#删除文件

1）rm <file>，删除的是工作区的文件，此时版本库里的文件还在
   通过  git checkout -- <file>恢复
2）git rm <file>，删除的是暂存区和工作区的文件，可通过
    git reset HEAD <file>恢复暂存区的文件,
    git checkout <file>恢复工作区文件
3）若要删除版本库文件，则在2）的基础上提交修改即可
    git commit -m "remove <file>"
若要恢复，通过版本回退的方式恢复。

#关联远程库
关联到一个远程库： git remote add origin https://github.com/../...git

推送内容到远程库： git push origin master


#创建与合并分支：git branch dev 
 切换到指定分支：git checkout dev
 查看所有分支：  git branch
 在分支dev下做了最新提交，切回到master分支，通过：
                 git merge dev
 将master分支同步到dev分支
 若在dev分支上执行 git merge master，则提示已经三最新提交。

 同步后删除dev分支：git branch -d dev



#存储当前分支工作状态并切换到其他分支： git stash 

 其他分支工作完后切回原来分支，可通过： git stash list查看存储的状态
 通过 git stash pop 恢复原状态并删除记录信息。

